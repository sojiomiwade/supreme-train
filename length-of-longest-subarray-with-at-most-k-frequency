'''
1,2,3,1,2,3,1,2,...
    l
              r
use the violation method
keep track of max-freq

1 2 1 2 k=1 --> ans=2
    l
      r
count {11 21}

3 1 1 2 3 . k=1 --> ans=2
    l
      r
1 4 4 3 . . .
    l
    r
heap --> (2,4)
'''
class Solution:
    def maxSubarrayLength(self, nums: List[int], k: int) -> int:
        count=collections.Counter()
        l,n=0,len(nums)
        ans=0
        for r in range(n):
            count[nums[r]]+=1
            while count[nums[r]]>k:
                count[nums[l]]-=1
                l+=1
            ans=max(ans,r-l+1)
        return ans